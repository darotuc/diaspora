#!/bin/bash
#
# Start diaspora websocket and main services
#

realpath=$( ruby -e "puts File.expand_path(\"$0\")")
cd $( dirname $realpath)/..
OS=`uname -s`

[ -e config/server.sh ] && source config/server.sh

function chk_service
{
    port=${1:?Missing port}
    case $OS in
    *[Bb][Ss][Dd]*|Darwin)
        ## checks ipv[46]
        netstat -anL | awk '{print $2}' | grep "\.$1$"
    ;;
    *)
        # Is someone listening on the ports already? (ipv4 only test ?)
        netstat -nl | grep '[^:]:'$port'[ \t]'
    ;;
    esac
}

function redis_config
# Create/update the local redis.conf file from /etc master
{
    if [ ! -w config ]; then
        # read-only installation, should be OK
        return
    fi

    if [ -r "/etc/redis.conf" ]; then
        redis_conf="/etc/redis.conf"
    elif [ -r "/etc/redis/redis.conf" ]; then
        redis_conf="/etc/redis/redis.conf"
    else
        echo <<- EOM
		Don't know how to configure redis for this platform. Copy
		the configuration file redis.conf to the config directory
		and patch it manually. In particular, don't daemonize.
	EOM
        return
    fi

    if [ config/redis.cont -nt $redis_conf ]
    then
        return
    fi

    cp $redis_conf config/redis.conf
    sed -i -e '/^[^#]*daemonize/s/yes/no/'                               \
           -e '/^[^#]*logfile/s|.*|logfile /var/log/diaspora/redis.log|' \
        config/redis.conf
}

# Scan for -p, find out what port thin is about to use.
args="$DEFAULT_THIN_ARGS $@"
prev_arg=''
for arg in $( echo $args | awk '{ for (i = 1; i <= NF; i++) print $i}')
do
    [ "$prev_arg" = '-p' ] && THIN_PORT="$arg"
    prev_arg="$arg"
done

# Is someone listening on the ports already? (ipv4 only test ?)
services=$( chk_service $THIN_PORT )
if [ -n "$services" ]; then
    echo "Error: thin port $THIN_PORT is already in use. Exiting" >&2
    echo "     $services"
    exit 64
fi

services=$( chk_service $SOCKET_PORT )
if [ -n "$services" ]; then
    echo "Error: websocket port $SOCKET_PORT is already in use. Exiting" >&2
    echo "     $services"
    exit 64
fi

# See http://bugs.joindiaspora.com/issues/722
services=$( chk_service 5379 )
if [ -n "$services" ]; then
    echo "Error:  Someone (another redis server?) is using redis port 5379" >&2
    echo "     $services"
    exit 64
fi

# Check if Mongo is running
if  ! ps ax | grep -v grep | grep mongod >/dev/null
then
    echo "Error: Mongod not started. Exiting" >&2
    exit 64
fi

redis_config

#  Setup the public (assets) directory
[ -w public ] && ./script/public_setup.sh $THIN_PORT
if [ ! -e public/source.tar.gz ]; then
    echo "Error: Can't find, or even create, public/source.tar.gz. Exiting" >&2
    exit 65
fi
if [ ! -e 'public/stylesheets/application.css' ]; then
    echo 'Jammit precache error (now or at install)' >&2
    exit 66
fi
if [ ! -e public/well-known/host-meta ]; then
    echo "Error: Can't find, or even create, public/well-known/host-meta" >&2
    exit 67
fi

mkdir -p -v log/thin/
bundle exec ruby ./script/websocket_server.rb&
redis-server config/redis.conf &>log/redis-console.log &
QUEUE=* bundle exec rake resque:work&
bundle exec thin start $args
